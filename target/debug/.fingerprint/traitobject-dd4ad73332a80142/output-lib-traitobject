{"future_incompat_report":[{"diagnostic":{"message":"conflicting implementations of trait `Trait` for type `(dyn Send + Sync + 'static)`: (E0119)","code":{"code":"order_dependent_trait_objects","explanation":null},"level":"warning","spans":[{"file_name":"/Users/chengyq/.cargo/registry/src/github.com-1ecc6299db9ec823/traitobject-0.1.0/src/impls.rs","byte_start":3978,"byte_end":4026,"line_start":71,"line_end":71,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"unsafe impl Trait for ::std::marker::Send + Sync { }","highlight_start":1,"highlight_end":49}],"label":"first implementation here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chengyq/.cargo/registry/src/github.com-1ecc6299db9ec823/traitobject-0.1.0/src/impls.rs","byte_start":4031,"byte_end":4086,"line_start":72,"line_end":72,"column_start":1,"column_end":56,"is_primary":true,"text":[{"text":"unsafe impl Trait for ::std::marker::Send + Send + Sync { }","highlight_start":1,"highlight_end":56}],"label":"conflicting implementation for `(dyn Send + Sync + 'static)`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #56484 <https://github.com/rust-lang/rust/issues/56484>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(order_dependent_trait_objects)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: conflicting implementations of trait `Trait` for type `(dyn Send + Sync + 'static)`: (E0119)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chengyq/.cargo/registry/src/github.com-1ecc6299db9ec823/traitobject-0.1.0/src/impls.rs:72:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0munsafe impl Trait for ::std::marker::Send + Sync { }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfirst implementation here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m72\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0munsafe impl Trait for ::std::marker::Send + Send + Sync { }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mconflicting implementation for `(dyn Send + Sync + 'static)`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #56484 <https://github.com/rust-lang/rust/issues/56484>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(order_dependent_trait_objects)]` on by default\u001b[0m\n\n"}},{"diagnostic":{"message":"conflicting implementations of trait `Trait` for type `(dyn Send + Sync + 'static)`: (E0119)","code":{"code":"order_dependent_trait_objects","explanation":null},"level":"warning","spans":[{"file_name":"/Users/chengyq/.cargo/registry/src/github.com-1ecc6299db9ec823/traitobject-0.1.0/src/impls.rs","byte_start":4031,"byte_end":4086,"line_start":72,"line_end":72,"column_start":1,"column_end":56,"is_primary":false,"text":[{"text":"unsafe impl Trait for ::std::marker::Send + Send + Sync { }","highlight_start":1,"highlight_end":56}],"label":"first implementation here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chengyq/.cargo/registry/src/github.com-1ecc6299db9ec823/traitobject-0.1.0/src/impls.rs","byte_start":4091,"byte_end":4139,"line_start":73,"line_end":73,"column_start":1,"column_end":49,"is_primary":true,"text":[{"text":"unsafe impl Trait for ::std::marker::Sync + Send { }","highlight_start":1,"highlight_end":49}],"label":"conflicting implementation for `(dyn Send + Sync + 'static)`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #56484 <https://github.com/rust-lang/rust/issues/56484>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(order_dependent_trait_objects)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: conflicting implementations of trait `Trait` for type `(dyn Send + Sync + 'static)`: (E0119)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chengyq/.cargo/registry/src/github.com-1ecc6299db9ec823/traitobject-0.1.0/src/impls.rs:73:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m72\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0munsafe impl Trait for ::std::marker::Send + Send + Sync { }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfirst implementation here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0munsafe impl Trait for ::std::marker::Sync + Send { }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mconflicting implementation for `(dyn Send + Sync + 'static)`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #56484 <https://github.com/rust-lang/rust/issues/56484>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(order_dependent_trait_objects)]` on by default\u001b[0m\n\n"}},{"diagnostic":{"message":"conflicting implementations of trait `Trait` for type `(dyn Send + Sync + 'static)`: (E0119)","code":{"code":"order_dependent_trait_objects","explanation":null},"level":"warning","spans":[{"file_name":"/Users/chengyq/.cargo/registry/src/github.com-1ecc6299db9ec823/traitobject-0.1.0/src/impls.rs","byte_start":4091,"byte_end":4139,"line_start":73,"line_end":73,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"unsafe impl Trait for ::std::marker::Sync + Send { }","highlight_start":1,"highlight_end":49}],"label":"first implementation here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chengyq/.cargo/registry/src/github.com-1ecc6299db9ec823/traitobject-0.1.0/src/impls.rs","byte_start":4197,"byte_end":4252,"line_start":75,"line_end":75,"column_start":1,"column_end":56,"is_primary":true,"text":[{"text":"unsafe impl Trait for ::std::marker::Sync + Send + Sync { }","highlight_start":1,"highlight_end":56}],"label":"conflicting implementation for `(dyn Send + Sync + 'static)`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #56484 <https://github.com/rust-lang/rust/issues/56484>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(order_dependent_trait_objects)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: conflicting implementations of trait `Trait` for type `(dyn Send + Sync + 'static)`: (E0119)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chengyq/.cargo/registry/src/github.com-1ecc6299db9ec823/traitobject-0.1.0/src/impls.rs:75:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0munsafe impl Trait for ::std::marker::Sync + Send { }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfirst implementation here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m74\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0munsafe impl Trait for ::std::marker::Sync + Sync { }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m75\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0munsafe impl Trait for ::std::marker::Sync + Send + Sync { }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mconflicting implementation for `(dyn Send + Sync + 'static)`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #56484 <https://github.com/rust-lang/rust/issues/56484>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(order_dependent_trait_objects)]` on by default\u001b[0m\n\n"}}]}
